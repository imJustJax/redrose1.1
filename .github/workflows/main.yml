name: redrose1.1
on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup RDP user
        shell: pwsh
        run: |
          $username = 'RDP'
          # generate a reasonably strong password (change if you want a specific password)
          $password = [System.Web.Security.Membership]::GeneratePassword(16,3)
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force

          New-LocalUser -Name $username -Password $securePass -AccountNeverExpires -Description "Created by GH Actions for RDP"
          Add-LocalGroupMember -Group "Administrators" -Member $username
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username

          # export credentials for later steps
          Add-Content -Path $env:GITHUB_ENV -Value ("RDP_CREDS=User: {0} | Password: {1}" -f $username, $password)

          if (-not (Get-LocalUser -Name $username)) {
            Write-Error "User creation failed"
            exit 1
          }

      - name: Install Tailscale
        shell: pwsh
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = Join-Path $env:TEMP "tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Establish Tailscale Connection
        shell: pwsh
        env:
          TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=$env:TAILSCALE_AUTH_KEY --hostname=("gh-runner-{0}" -f $env:GITHUB_RUN_ID)

          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 10) {
            $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
            Start-Sleep -Seconds 5
            $retries++
          }

          if (-not $tsIP) {
            Write-Error "Tailscale IP not assigned. Exiting."
            exit 1
          }

          Add-Content -Path $env:GITHUB_ENV -Value ("TAILSCALE_IP={0}" -f $tsIP)

      - name: Verify RDP Accessibility
        shell: pwsh
        run: |
          Write-Host "Tailscale IP: $env:TAILSCALE_IP"
          $testResult = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
          if (-not $testResult.TcpTestSucceeded) {
            Write-Error "TCP connection to RDP port 3389 failed"
            exit 1
          }
          Write-Host "TCP connectivity successful!"

      - name: Maintain Connection
        shell: pwsh
        run: |
          Write-Host "`n=== RDP ACCESS ==="
          Write-Host ("Address: {0}" -f $env:TAILSCALE_IP)
          Write-Host ("Username: RDP")
          # print the password portion of RDP_CREDS
          $pwd = ($env:RDP_CREDS -split 'Password: ')[1]
          Write-Host ("Password: {0}" -f $pwd)
          Write-Host "==================`n"

          # Keep runner active until manually cancelled
          while ($true) {
            Write-Host ("[{0}] RDP Active - Use Ctrl+C in workflow to terminate" -f (Get-Date))
            Start-Sleep -Seconds 300
          }
